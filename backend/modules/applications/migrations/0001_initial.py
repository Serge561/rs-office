# Generated by Django 5.0 on 2024-02-28 20:18

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0012_rename_time_create_company_created_at_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Vessel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55, verbose_name='Название судна')),
                ('name_en', models.CharField(blank=True, max_length=55, verbose_name="Vessel's name")),
                ('rs_number', models.CharField(blank=True, max_length=6, unique=True, verbose_name='Регистровый номер')),
                ('imo_number', models.CharField(blank=True, max_length=7, unique=True, verbose_name='Номер ИМО')),
                ('g_tonnage', models.PositiveIntegerField(blank=True, null=True, verbose_name='Валовая вместимость')),
                ('build_date', models.DateField(blank=True, null=True, verbose_name='Дата постройки')),
                ('me_power', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Мощность ГД')),
                ('flag', models.CharField(choices=[('AW', 'Аруба'), ('AF', 'Афганистан'), ('AO', 'Ангола'), ('AI', 'Ангвилла'), ('AX', 'Аландские острова'), ('AL', 'Албания'), ('AD', 'Андорра'), ('AE', 'Объединённые Арабские Эмираты'), ('AR', 'Аргентина'), ('AM', 'Армения'), ('AS', 'Американские Самоа'), ('AQ', 'Антарктика'), ('TF', 'Французские южные территории'), ('AG', 'Антигуа и Барбуда'), ('AU', 'Австралия'), ('AT', 'Австрия'), ('AZ', 'Азербайджан'), ('BI', 'Бурунди'), ('BE', 'Бельгия'), ('BJ', 'Бенин'), ('BQ', 'Бонайре, Синт-Эстатиус и Саба'), ('BF', 'Буркина-Фасо'), ('BD', 'Бангладеш'), ('BG', 'Болгария'), ('BH', 'Бахрейн'), ('BS', 'Багамы'), ('BA', 'Босния и Герцеговина'), ('BL', 'Сен-Бартельми'), ('BY', 'Беларусь'), ('BZ', 'Белиз'), ('BM', 'Бермуды'), ('BO', 'Боливия'), ('BR', 'Бразилия'), ('BB', 'Барбадос'), ('BN', 'Бруней Даруссалам'), ('BT', 'Бутан'), ('BV', 'Остров Буве'), ('BW', 'Ботсвана'), ('CF', 'Центрально-африканская республика'), ('CA', 'Канада'), ('CC', 'Кокосовые острова'), ('CH', 'Швейцария'), ('CL', 'Чили'), ('CN', 'Китай'), ('CI', "Кот-д'Ивуар"), ('CM', 'Камерун'), ('CD', 'Демократическая Республика Конго'), ('CG', 'Конго'), ('CK', 'Острова Кука'), ('CO', 'Колумбия'), ('KM', 'Коморы'), ('CV', 'Кабо-Верде'), ('CR', 'Коста-Рика'), ('CU', 'Куба'), ('CW', 'Кюрасао'), ('CX', 'Остров Рождества'), ('KY', 'Каймановы острова'), ('CY', 'Кипр'), ('CZ', 'Чехия'), ('DE', 'Германия'), ('DJ', 'Джибути'), ('DM', 'Доминика'), ('DK', 'Дания'), ('DO', 'Доминиканская республика'), ('DZ', 'Алжир'), ('EC', 'Эквадор'), ('EG', 'Египет'), ('ER', 'Эритрея'), ('EH', 'Западная Сахара'), ('ES', 'Испания'), ('EE', 'Эстония'), ('ET', 'Эфиопия'), ('FI', 'Финляндия'), ('FJ', 'Фиджи'), ('FK', 'Фолклендские (Мальвинские) острова'), ('FR', 'Франция'), ('FO', 'Фарерские острова'), ('FM', 'Федеративные Штаты Микронезии'), ('GA', 'Габон'), ('GB', 'Соединённое Королевство'), ('GE', 'Грузия'), ('GG', 'Гернси'), ('GH', 'Гана'), ('GI', 'Гибралтар'), ('GN', 'Гвинея'), ('GP', 'Гваделупа'), ('GM', 'Гамбия'), ('GW', 'Гвинея-Бисау'), ('GQ', 'Экваториальная Гвинея'), ('GR', 'Греция'), ('GD', 'Гренада'), ('GL', 'Гренландия'), ('GT', 'Гватемала'), ('GF', 'Французская Гвиана'), ('GU', 'Гуам'), ('GY', 'Гайана'), ('HK', 'Гонконг'), ('HM', 'Остров Херд и острова МакДональд'), ('HN', 'Гондурас'), ('HR', 'Хорватия'), ('HT', 'Гаити'), ('HU', 'Венгрия'), ('ID', 'Индонезия'), ('IM', 'Остров Мэн'), ('IN', 'Индия'), ('IO', 'Британская территория Индийского океана'), ('IE', 'Ирландия'), ('IR', 'Иран'), ('IQ', 'Ирак'), ('IS', 'Исландия'), ('IL', 'Израиль'), ('IT', 'Италия'), ('JM', 'Ямайка'), ('JE', 'Джерси'), ('JO', 'Иордания'), ('JP', 'Япония'), ('KZ', 'Казахстан'), ('KE', 'Кения'), ('KG', 'Киргизия'), ('KH', 'Камбоджа'), ('KI', 'Кирибати'), ('KN', 'Сент-Китс и Невис'), ('KR', 'Республика Корея'), ('KW', 'Кувейт'), ('LA', 'Лаосская Народно-Демократическая Республика'), ('LB', 'Ливан'), ('LR', 'Либерия'), ('LY', 'Ливия'), ('LC', 'Сент-Люсия'), ('LI', 'Лихтенштейн'), ('LK', 'Шри-Ланка'), ('LS', 'Лесото'), ('LT', 'Литва'), ('LU', 'Люксембург'), ('LV', 'Латвия'), ('MO', 'Макао'), ('MF', 'Сен-Мартен (Франция)'), ('MA', 'Марокко'), ('MC', 'Монако'), ('MD', 'Республика Молдова'), ('MG', 'Мадагаскар'), ('MV', 'Мальдивы'), ('MX', 'Мексика'), ('MH', 'Маршалловы острова'), ('MK', 'Северная Македония'), ('ML', 'Мали'), ('MT', 'Мальта'), ('MM', 'Мьянма'), ('ME', 'Черногория'), ('MN', 'Монголия'), ('MP', 'Острова северной Марианы'), ('MZ', 'Мозамбик'), ('MR', 'Мавритания'), ('MS', 'Монтсеррат'), ('MQ', 'Мартиника'), ('MU', 'Маврикий'), ('MW', 'Малави'), ('MY', 'Малайзия'), ('YT', 'Майот'), ('NA', 'Намибия'), ('NC', 'Новая Каледония'), ('NE', 'Нигер'), ('NF', 'Остров Норфолк'), ('NG', 'Нигерия'), ('NI', 'Никарагуа'), ('NU', 'Ниуэ'), ('NL', 'Нидерланды'), ('NO', 'Норвегия'), ('NP', 'Непал'), ('NR', 'Науру'), ('NZ', 'Новая Зеландия'), ('OM', 'Оман'), ('PK', 'Пакистан'), ('PA', 'Панама'), ('PN', 'Питкэрн'), ('PE', 'Перу'), ('PH', 'Филиппины'), ('PW', 'Палау'), ('PG', 'Папуа — Новая Гвинея'), ('PL', 'Польша'), ('PR', 'Пуэрто-Рико'), ('KP', 'Корейская Народно-Демократическая Республика'), ('PT', 'Португалия'), ('PY', 'Парагвай'), ('PS', 'Палестина'), ('PF', 'Французская Полинезия'), ('QA', 'Катар'), ('RE', 'Реюньон'), ('RO', 'Румыния'), ('RU', 'Российская Федерация'), ('RW', 'Руанда'), ('SA', 'Саудовская Аравия'), ('SD', 'Судан'), ('SN', 'Сенегал'), ('SG', 'Сингапур'), ('GS', 'Южная Джорджия и Южные Сандвичевы острова'), ('SH', 'Остров Святой Елены, Остров Вознесения и Тристан-да-Кунья'), ('SJ', 'Шпицберген и Ян-Майен'), ('SB', 'Соломоновы Острова'), ('SL', 'Сьерра-Леоне'), ('SV', 'Сальвадор'), ('SM', 'Сан-Марино'), ('SO', 'Сомали'), ('PM', 'Сен-Пьер и Микелон'), ('RS', 'Сербия'), ('SS', 'Южный Судан'), ('ST', 'Сан-Томе и Принсипи'), ('SR', 'Суринам'), ('SK', 'Словакия'), ('SI', 'Словения'), ('SE', 'Швеция'), ('SZ', 'Эсватини'), ('SX', 'Синт-Мартен (голландская часть)'), ('SC', 'Сейшелы'), ('SY', 'Сирийская Арабская Республика'), ('TC', 'Острова Туркс и Каикос'), ('TD', 'Чад'), ('TG', 'Того'), ('TH', 'Таиланд'), ('TJ', 'Таджикистан'), ('TK', 'Токелау'), ('TM', 'Туркменистан'), ('TL', 'Восточный Тимор'), ('TO', 'Тонга'), ('TT', 'Тринидад и Тобаго'), ('TN', 'Тунис'), ('TR', 'Türkiye'), ('TV', 'Тувалу'), ('TW', 'Китайская провинция Тайвань'), ('TZ', 'Танзания'), ('UG', 'Уганда'), ('UA', 'Украина'), ('UM', 'Соединенные штаты Малых Удаленных островов'), ('UY', 'Уругвай'), ('US', 'Соединённые штаты'), ('UZ', 'Узбекистан'), ('VA', 'Государство-город Ватикан'), ('VC', 'Сент-Винсент и Гренадины'), ('VE', 'Боливарианская Республика Венесуэла'), ('VG', 'Виргинские острова (Британия)'), ('VI', 'Виргинские острова (США)'), ('VN', 'Вьетнам'), ('VU', 'Вануату'), ('WF', 'Уоллес и Футана'), ('WS', 'Самоа'), ('YE', 'Йемен'), ('ZA', 'Южная Африка'), ('ZM', 'Замбия'), ('ZW', 'Зимбабве')], max_length=2, verbose_name='Страна')),
                ('vessel_stat_group', models.CharField(blank=True, choices=[('OIL', 'Нефтеналивные'), ('OCT', 'Нефтеналивные/Химовозы'), ('CHE', 'Химовозы'), ('GAS', 'Газовозы'), ('OTH', 'Наливные прочие'), ('OOC', 'Нефтенавалочные и нефтерудовозы'), ('OCB', 'Рудовозы и навалочные'), ('GEN', 'Суда для генгруза'), ('CPA', 'Грузопассажирские'), ('CON', 'Контейнерные, баржевозы, доковые'), ('CAR', 'Суда для перевозки транспортных средств'), ('FTV', 'Рыбопромысловые базы, рыботранспортные суда'), ('FIS', 'Рыболовные'), ('PAS', 'Пассажирские и пассажирские бескоечные'), ('SUP', 'Суда обеспечения, обслуживающие суда'), ('TUG', 'Буксиры'), ('DRA', 'Земснаряды'), ('REF', 'Рефрижераторные'), ('ICE', 'Ледоколы'), ('RES', 'Научно-исследовательские'), ('OTS', 'Прочие суда'), ('SMC', 'Маломерные/прогулочные'), ('PIP', 'Трубопроводы/ПДК')], max_length=3, verbose_name='Статистическая группа судна')),
                ('is_international_voyage', models.BooleanField(default=True, verbose_name='Совершает международные рейсы')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата и время обновления')),
                ('created_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='creator_vessels', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updater_vessels', to=settings.AUTH_USER_MODEL, verbose_name='Обновил')),
            ],
            options={
                'verbose_name': 'Судно',
                'verbose_name_plural': 'Суда',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=7, unique=True, verbose_name='Номер заявки')),
                ('date', models.DateField(verbose_name='Дата заявки')),
                ('completion_date', models.DateField(blank=True, null=True, verbose_name='Дата завершения заявки')),
                ('survey_code', models.CharField(choices=[('00001', 'Классификационные освидетельствования судов в эксплуатации'), ('00002', 'Техническое наблюдение за постройкой судна'), ('00003', 'Услуги по освидетельствованию судна в ремонте'), ('00004', 'Техническое наблюдение за изготовлением материалов и изделий не судового назначения'), ('00005', 'Техническое наблюдение за изготовлением стали'), ('00006', 'Рассмотрение технической документации'), ('00007', 'Обмер судов'), ('00008', 'Замещение ИКО'), ('00009', 'Техническое наблюдение за контейнерами'), ('00010', 'Прочие виды деятельности'), ('00011', 'Освидетельствование на соответствие МКУБ, ОСПС, КТМС судов'), ('00012', 'Освидетельствование на сответствие другим МК судов в эксплуатации'), ('00013', 'Добровольная сертификация'), ('00014', 'Освидетельствование на соответствие МКУБ судовых компаний'), ('00015', 'Техническое наблюдение за изготовлением материалов и изделий для судов'), ('00016', 'Техническое наблюдение за постройкой МСП и трубопроводов'), ('00100', 'Сертификация систем менеджмента качества'), ('00101', 'Квалификационные испытания сварщиков и одобрение технологических процессов сварки (СДС, СПС)'), ('00102', 'Сертификация продукции в системе ГОСТ Р'), ('00103', 'Освидетельствование предприятий, лабораторий на территории России (СП, ССП, СПИ, СПЛ)'), ('00104', 'Освидетельствование предприятий, лабораторий на территории других стран (не Россия)'), ('00105', 'Услуги по декларированию и сертификации навалочных и опасных грузов, сертификация тары'), ('00199', 'Техническое наблюдение согласно отчёту предприятия (с НДС)')], default='00001', max_length=5, verbose_name='Код услуги')),
                ('survey_type', models.CharField(blank=True, choices=[('ISM', 'На соответствие требованиям МКУБ'), ('ISS', 'На соответствие требованиям МК ОСПС'), ('MLC', 'На соответствие требованиям КТМС-2006'), ('DII', 'Рассмотрение II части Декларации о соответствии трудовым нормам в морском судоходстве'), ('EXP', 'Расширение сферы деятельности'), ('CHA', 'Изменение содержания свидетельства'), ('WAC', 'Квалификационные испытания сварщиков'), ('WPS', 'Технологические процессы сварки')], default='00001', max_length=3, verbose_name='Вид освидетельствования')),
                ('survey_scope', models.CharField(blank=True, choices=[('I', 'Первоначальное'), ('A', 'Ежегодное'), ('IN', 'Промежуточное'), ('S', 'Очередное'), ('D', 'Подводной части судна'), ('R', 'Возобновляющее'), ('C', 'Непрерывное'), ('O', 'Внеочередное'), ('INT', 'Временное (МКУБ/ОСПС/КТМС)'), ('ADD', 'Дополнительное (МКУБ/ОСПС/КТМС)')], max_length=3, verbose_name='Объём освидетельствования')),
                ('survey_object', models.CharField(blank=True, choices=[('SHIP', 'Судно'), ('ALL', 'Судно по всем частям'), ('HULL', 'Судно по корпусной части'), ('MECH', 'Судно по механической части'), ('ELEC', 'Судно по электромеханической части'), ('HUME', 'Судно по корпусной и механической частям'), ('MEEL', 'Судно по механической и электромеханической частям')], default='ALLO', max_length=4, verbose_name='Объекты освидетельствования')),
                ('completion_expected_date', models.DateField(blank=True, null=True, verbose_name='Ожидаемая дата завершения ремонта')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата и время обновления')),
                ('applicant_signer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applicant_signer_applications', to='companies.employee', verbose_name='Подписывает от Заказчика')),
                ('assigned_surveyors', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Исполнители заявки')),
                ('authorized_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authorized_person_applications', to='companies.employee', verbose_name='Уполномоченное лицо')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='companies.city', verbose_name='Город')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='companies.company', verbose_name='Компания')),
                ('created_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='creator_applications', to=settings.AUTH_USER_MODEL, verbose_name='Создал')),
                ('register_signer', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='register_signer_applications', to=settings.AUTH_USER_MODEL, verbose_name='Подписывает от Регистра')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updater_applications', to=settings.AUTH_USER_MODEL, verbose_name='Обновил')),
                ('vessel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applications', to='applications.vessel', verbose_name='Название судна')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'ordering': ['-number'],
            },
        ),
        migrations.CreateModel(
            name='VesselExtraInfo',
            fields=[
                ('class_status', models.CharField(blank=True, choices=[('01', 'Судно в постройке на класс РС'), ('02', 'Судно в эксплуатации в стадии присвоения класса РС'), ('03', 'Судно в эксплуатации с классом ИКО в стадии выдачи РС конвенционных документов'), ('04', 'Судно в эксплуатации с классом РКО и флагом РФ в стадии выдачи РС конвенционных документов'), ('06', 'Техническое наблюдение за постройкой судна приостановлено'), ('07', 'Заявка аннулирована'), ('08', 'Строительство прекращено'), ('09', 'Постройка законсервирована, освидетельствование не выполняется'), ('10', 'Судно предполагается к строительству на класс РС'), ('11', 'Класс действует (в эксплуатации)'), ('12', 'В ремонте'), ('13', 'Класс действует (в отстое)'), ('14', 'Резервный код'), ('15', 'Класс действует (форс-мажор)'), ('16', 'Класс действует (судно в процессе освидетельствования)'), ('21', 'Класс приостановлен (аварийный случай)'), ('22', 'Класс приостановлен (просрочено освидетельствование)'), ('23', 'Класс приостановлен (судно в консервации)'), ('24', 'Класс приостановлен в отстое (просрочено освидетельствование)'), ('25', 'Класс приостановлен (судно выведено в отстой с приостановленным классом)'), ('26', 'Класс приостановлен (невыполнение требований или условий сохранения класса)'), ('27', 'Класс приостановлен (причины, не связаные с безопасностью)'), ('28', 'Класс приостановлен (судно в процессе освидетельствования для восстановления класса)'), ('31', 'Класс снят (просьба судовладельца)'), ('32', 'Класс снят (истекли 6 месяцев после приостановки класса)'), ('33', 'Класс снят (невыполнение требований Правил РС)'), ('34', 'Класс снят (причины, не связаные с безопасностью)'), ('41', 'Класс снят (разделано или продано для разделки на металлолом)'), ('42', 'Класс снят (гибель)'), ('43', 'Класс снят (аварийный случай)'), ('51', 'Класс действует (восстановлен после приостановки)'), ('52', 'Класс действует (переназначен после снятия)'), ('61', 'Класс действует (принято в класс РС из класса общества-члена МАКО)'), ('62', 'Класс действует (принято в класс РС из класса общества-не члена МАКО)'), ('71', 'Класс снят (переход из класса РС в класс общества-члена МАКО)'), ('72', 'Класс снят (переход из класса РС в класс общества-не члена МАКО)'), ('80', 'Маломерное прогулочное судно в эксплуатации'), ('90', 'Маломерное прогулочное судно не в эксплуатации'), ('99', 'Класс ИКО')], max_length=2, verbose_name='Текущий статус состояния класса судна')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='Дата ближайщего предписанного освид. или выполнения треб.')),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='applications.application', verbose_name='Номер заявки')),
                ('previous_survey_date', models.DateField(blank=True, null=True, verbose_name='Дата предыдущего освидетельствования')),
                ('last_psc_inspection_date', models.DateField(blank=True, null=True, verbose_name='Дата последней проверки судна властями государства порта')),
                ('last_psc_inspection_result', models.TextField(blank=True, verbose_name='Результаты последней проверки судна властями государства порта')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='companies.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Дополнительные данные по судну',
                'verbose_name_plural': 'Дополнительные данные по судну',
            },
        ),
    ]
