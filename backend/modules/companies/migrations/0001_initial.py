# Generated by Django 5.0 on 2024-01-28 21:06

import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=40, verbose_name='Название')),
                ('country', models.CharField(choices=[('AW', 'Aruba'), ('AF', 'Afghanistan'), ('AO', 'Angola'), ('AI', 'Anguilla'), ('AX', 'Åland Islands'), ('AL', 'Albania'), ('AD', 'Andorra'), ('AE', 'United Arab Emirates'), ('AR', 'Argentina'), ('AM', 'Armenia'), ('AS', 'American Samoa'), ('AQ', 'Antarctica'), ('TF', 'French Southern Territories'), ('AG', 'Antigua and Barbuda'), ('AU', 'Australia'), ('AT', 'Austria'), ('AZ', 'Azerbaijan'), ('BI', 'Burundi'), ('BE', 'Belgium'), ('BJ', 'Benin'), ('BQ', 'Bonaire, Sint Eustatius and Saba'), ('BF', 'Burkina Faso'), ('BD', 'Bangladesh'), ('BG', 'Bulgaria'), ('BH', 'Bahrain'), ('BS', 'Bahamas'), ('BA', 'Bosnia and Herzegovina'), ('BL', 'Saint Barthélemy'), ('BY', 'Belarus'), ('BZ', 'Belize'), ('BM', 'Bermuda'), ('BO', 'Bolivia, Plurinational State of'), ('BR', 'Brazil'), ('BB', 'Barbados'), ('BN', 'Brunei Darussalam'), ('BT', 'Bhutan'), ('BV', 'Bouvet Island'), ('BW', 'Botswana'), ('CF', 'Central African Republic'), ('CA', 'Canada'), ('CC', 'Cocos (Keeling) Islands'), ('CH', 'Switzerland'), ('CL', 'Chile'), ('CN', 'China'), ('CI', "Côte d'Ivoire"), ('CM', 'Cameroon'), ('CD', 'Congo, The Democratic Republic of the'), ('CG', 'Congo'), ('CK', 'Cook Islands'), ('CO', 'Colombia'), ('KM', 'Comoros'), ('CV', 'Cabo Verde'), ('CR', 'Costa Rica'), ('CU', 'Cuba'), ('CW', 'Curaçao'), ('CX', 'Christmas Island'), ('KY', 'Cayman Islands'), ('CY', 'Cyprus'), ('CZ', 'Czechia'), ('DE', 'Germany'), ('DJ', 'Djibouti'), ('DM', 'Dominica'), ('DK', 'Denmark'), ('DO', 'Dominican Republic'), ('DZ', 'Algeria'), ('EC', 'Ecuador'), ('EG', 'Egypt'), ('ER', 'Eritrea'), ('EH', 'Western Sahara'), ('ES', 'Spain'), ('EE', 'Estonia'), ('ET', 'Ethiopia'), ('FI', 'Finland'), ('FJ', 'Fiji'), ('FK', 'Falkland Islands (Malvinas)'), ('FR', 'France'), ('FO', 'Faroe Islands'), ('FM', 'Micronesia, Federated States of'), ('GA', 'Gabon'), ('GB', 'United Kingdom'), ('GE', 'Georgia'), ('GG', 'Guernsey'), ('GH', 'Ghana'), ('GI', 'Gibraltar'), ('GN', 'Guinea'), ('GP', 'Guadeloupe'), ('GM', 'Gambia'), ('GW', 'Guinea-Bissau'), ('GQ', 'Equatorial Guinea'), ('GR', 'Greece'), ('GD', 'Grenada'), ('GL', 'Greenland'), ('GT', 'Guatemala'), ('GF', 'French Guiana'), ('GU', 'Guam'), ('GY', 'Guyana'), ('HK', 'Hong Kong'), ('HM', 'Heard Island and McDonald Islands'), ('HN', 'Honduras'), ('HR', 'Croatia'), ('HT', 'Haiti'), ('HU', 'Hungary'), ('ID', 'Indonesia'), ('IM', 'Isle of Man'), ('IN', 'India'), ('IO', 'British Indian Ocean Territory'), ('IE', 'Ireland'), ('IR', 'Iran, Islamic Republic of'), ('IQ', 'Iraq'), ('IS', 'Iceland'), ('IL', 'Israel'), ('IT', 'Italy'), ('JM', 'Jamaica'), ('JE', 'Jersey'), ('JO', 'Jordan'), ('JP', 'Japan'), ('KZ', 'Kazakhstan'), ('KE', 'Kenya'), ('KG', 'Kyrgyzstan'), ('KH', 'Cambodia'), ('KI', 'Kiribati'), ('KN', 'Saint Kitts and Nevis'), ('KR', 'Korea, Republic of'), ('KW', 'Kuwait'), ('LA', "Lao People's Democratic Republic"), ('LB', 'Lebanon'), ('LR', 'Liberia'), ('LY', 'Libya'), ('LC', 'Saint Lucia'), ('LI', 'Liechtenstein'), ('LK', 'Sri Lanka'), ('LS', 'Lesotho'), ('LT', 'Lithuania'), ('LU', 'Luxembourg'), ('LV', 'Latvia'), ('MO', 'Macao'), ('MF', 'Saint Martin (French part)'), ('MA', 'Morocco'), ('MC', 'Monaco'), ('MD', 'Moldova, Republic of'), ('MG', 'Madagascar'), ('MV', 'Maldives'), ('MX', 'Mexico'), ('MH', 'Marshall Islands'), ('MK', 'North Macedonia'), ('ML', 'Mali'), ('MT', 'Malta'), ('MM', 'Myanmar'), ('ME', 'Montenegro'), ('MN', 'Mongolia'), ('MP', 'Northern Mariana Islands'), ('MZ', 'Mozambique'), ('MR', 'Mauritania'), ('MS', 'Montserrat'), ('MQ', 'Martinique'), ('MU', 'Mauritius'), ('MW', 'Malawi'), ('MY', 'Malaysia'), ('YT', 'Mayotte'), ('NA', 'Namibia'), ('NC', 'New Caledonia'), ('NE', 'Niger'), ('NF', 'Norfolk Island'), ('NG', 'Nigeria'), ('NI', 'Nicaragua'), ('NU', 'Niue'), ('NL', 'Netherlands'), ('NO', 'Norway'), ('NP', 'Nepal'), ('NR', 'Nauru'), ('NZ', 'New Zealand'), ('OM', 'Oman'), ('PK', 'Pakistan'), ('PA', 'Panama'), ('PN', 'Pitcairn'), ('PE', 'Peru'), ('PH', 'Philippines'), ('PW', 'Palau'), ('PG', 'Papua New Guinea'), ('PL', 'Poland'), ('PR', 'Puerto Rico'), ('KP', "Korea, Democratic People's Republic of"), ('PT', 'Portugal'), ('PY', 'Paraguay'), ('PS', 'Palestine, State of'), ('PF', 'French Polynesia'), ('QA', 'Qatar'), ('RE', 'Réunion'), ('RO', 'Romania'), ('RU', 'Russian Federation'), ('RW', 'Rwanda'), ('SA', 'Saudi Arabia'), ('SD', 'Sudan'), ('SN', 'Senegal'), ('SG', 'Singapore'), ('GS', 'South Georgia and the South Sandwich Islands'), ('SH', 'Saint Helena, Ascension and Tristan da Cunha'), ('SJ', 'Svalbard and Jan Mayen'), ('SB', 'Solomon Islands'), ('SL', 'Sierra Leone'), ('SV', 'El Salvador'), ('SM', 'San Marino'), ('SO', 'Somalia'), ('PM', 'Saint Pierre and Miquelon'), ('RS', 'Serbia'), ('SS', 'South Sudan'), ('ST', 'Sao Tome and Principe'), ('SR', 'Suriname'), ('SK', 'Slovakia'), ('SI', 'Slovenia'), ('SE', 'Sweden'), ('SZ', 'Eswatini'), ('SX', 'Sint Maarten (Dutch part)'), ('SC', 'Seychelles'), ('SY', 'Syrian Arab Republic'), ('TC', 'Turks and Caicos Islands'), ('TD', 'Chad'), ('TG', 'Togo'), ('TH', 'Thailand'), ('TJ', 'Tajikistan'), ('TK', 'Tokelau'), ('TM', 'Turkmenistan'), ('TL', 'Timor-Leste'), ('TO', 'Tonga'), ('TT', 'Trinidad and Tobago'), ('TN', 'Tunisia'), ('TR', 'Türkiye'), ('TV', 'Tuvalu'), ('TW', 'Taiwan, Province of China'), ('TZ', 'Tanzania, United Republic of'), ('UG', 'Uganda'), ('UA', 'Ukraine'), ('UM', 'United States Minor Outlying Islands'), ('UY', 'Uruguay'), ('US', 'United States'), ('UZ', 'Uzbekistan'), ('VA', 'Holy See (Vatican City State)'), ('VC', 'Saint Vincent and the Grenadines'), ('VE', 'Venezuela, Bolivarian Republic of'), ('VG', 'Virgin Islands, British'), ('VI', 'Virgin Islands, U.S.'), ('VN', 'Viet Nam'), ('VU', 'Vanuatu'), ('WF', 'Wallis and Futuna'), ('WS', 'Samoa'), ('YE', 'Yemen'), ('ZA', 'South Africa'), ('ZM', 'Zambia'), ('ZW', 'Zimbabwe')], max_length=2, verbose_name='Страна')),
                ('region', models.CharField(blank=True, choices=[('77', 'Moskva'), ('78', 'Saint-Peterburg'), ('50', "Moskovskaya oblast'"), ('01', 'Adygeya, Respublika'), ('02', 'Bashkortostan, Respublika'), ('03', 'Buryatia, Respublika'), ('04', 'Altay, Respublika'), ('05', 'Dagestan, Respublika'), ('06', 'Ingushskaya Respublika'), ('07', 'Kabardino-Balkarskaya Respublika'), ('08', 'Kalmykia, Respublika'), ('09', 'Karachaevo-Cherkesskaya Respublika'), ('10', 'Karelia, Respublika'), ('11', 'Komi, Respublika'), ('12', 'Mariy Ehl, Respublika'), ('13', 'Mordovia, Respublika'), ('14', 'Sakha, Respublika (Yakutiya)'), ('15', 'Severnaya Osetia, Respublika (Alania)'), ('16', 'Tatarstan, Respublika'), ('17', 'Tyva, Respublika (Tuva)'), ('18', 'Udmurtskaya Respublika'), ('19', 'Khakassiya, Respublika'), ('95', 'Chechenskaya Respublika'), ('21', 'Chuvashskaya Respublika'), ('22', 'Altayskiy Kray'), ('80', 'Zabaykalskiy Kray'), ('82', 'Kamchatskiy Kray'), ('23', 'Krasnodarskiy Kray'), ('24', 'Krasnoyarskiy Kray'), ('81', 'Permskiy Kray'), ('25', 'Primorskiy Kray'), ('26', "Stavropol'siyy Kray"), ('27', 'Khabarovskiy Kray'), ('28', "Amurskaya oblast'"), ('29', "Arkhangel'skaya oblast'"), ('30', "Astrakhanskaya oblast'"), ('31', "Belgorodskaya oblast'"), ('32', "Bryanskaya oblast'"), ('33', "Vladimirskaya oblast'"), ('34', "Volgogradskaya oblast'"), ('35', "Vologodskaya oblast'"), ('36', "Voronezhskaya oblast'"), ('37', "Ivanovskaya oblast'"), ('38', "Irkutskaya oblast'"), ('39', "Kaliningradskaya oblast'"), ('40', "Kaluzhskaya oblast'"), ('42', "Kemerovskaya oblast'"), ('43', "Kirovskaya oblast'"), ('44', "Kostromskaya oblast'"), ('45', "Kurganskaya oblast'"), ('46', "Kurskaya oblast'"), ('47', "Leningradskaya oblast'"), ('48', "Lipeckaya oblast'"), ('49', "Magadanskaya oblast'"), ('51', "Murmanskaya oblast'"), ('52', "Nizhegorodskaja oblast'"), ('53', "Novgorodskaya oblast'"), ('54', "Novosibirskaya oblast'"), ('55', "Omskaya oblast'"), ('56', "Orenburgskaya oblast'"), ('57', "Orlovskaya oblast'"), ('58', "Penzenskaya oblast'"), ('60', "Pskovskaya oblast'"), ('61', "Rostovskaya oblast'"), ('62', "Rjazanskaya oblast'"), ('63', "Samarskaya oblast'"), ('64', "Saratovskaya oblast'"), ('65', "Sakhalinskaya oblast'"), ('66', "Sverdlovskaya oblast'"), ('67', "Smolenskaya oblast'"), ('68', "Tambovskaya oblast'"), ('69', "Tverskaya oblast'"), ('70', "Tomskaya oblast'"), ('71', "Tul'skaya oblast'"), ('72', "Tyumenskaya oblast'"), ('73', "Ul'ianovskaya oblast'"), ('74', "Chelyabinskaya oblast'"), ('76', "Yaroslavskaya oblast'"), ('79', "Evreyskaya avtonomnaja oblast'"), ('83', 'Neneckiy autonomnyy okrug'), ('86', 'Khanty-Mansiyskiy avtonomnyy okrug - Yugra'), ('87', 'Chukotskiy avtonomnyy okrug'), ('89', 'Yamalo-Neneckiy avtonomnyy okrug')], verbose_name='Область или край РФ')),
                ('district', models.CharField(blank=True, max_length=128, verbose_name='Район или городской округ')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='URL')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Адрес электронной почты')),
                ('inn', models.CharField(blank=True, max_length=12, verbose_name='ИНН')),
                ('kpp', models.CharField(blank=True, max_length=9, verbose_name='КПП')),
                ('ogrn', models.CharField(blank=True, max_length=15, verbose_name='ОГРН')),
                ('extra_info', models.TextField(blank=True, max_length=255, verbose_name='Дополнительная информация')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время добавления')),
                ('time_update', models.DateTimeField(auto_now=True, null=True, verbose_name='Время обновления')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postal_code', models.CharField(blank=True, max_length=16, verbose_name='Почтовый индекс')),
                ('address_line', models.CharField(blank=True, db_index=True, max_length=256, verbose_name='Адрес')),
                ('address_type', models.CharField(blank=True, choices=[('PO', 'Почтовый'), ('JU', 'Юридический')], default='PO', max_length=2, verbose_name='Тип адреса')),
                ('is_same', models.BooleanField(default=True, verbose_name='Фактический адрес совпадает с юридическим')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='companies.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Адрес компании',
                'verbose_name_plural': 'Адреса компаний',
                'ordering': ['id'],
            },
        ),
    ]
